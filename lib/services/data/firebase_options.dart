// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import '../../helpers/string_helper.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(StringHelper.webNotConfiguredError);
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(StringHelper.macosNotConfiguredError);
      case TargetPlatform.windows:
        throw UnsupportedError(StringHelper.windowsNotConfiguredError);
      case TargetPlatform.linux:
        throw UnsupportedError(StringHelper.linuxNotConfiguredError);
      default:
        throw UnsupportedError(StringHelper.platformNotSupportedError);
    }
  }

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: StringHelper.androidApiKey,
    appId: StringHelper.androidAppId,
    messagingSenderId: StringHelper.androidMessagingSenderId,
    projectId: StringHelper.androidProjectId,
    storageBucket: StringHelper.androidStorageBucket,
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: StringHelper.iosApiKey,
    appId: StringHelper.androidAppId,
    messagingSenderId: StringHelper.iosMessagingSenderId,
    projectId: StringHelper.iosProjectId,
    storageBucket: StringHelper.iosStorageBucket,
    iosBundleId: StringHelper.iosBundleId,
  );
}
